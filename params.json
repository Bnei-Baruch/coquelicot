{"name":"Coquelicot","tagline":"Upload your files as easily as a poppy petal flies into the air.","body":"## Coquelicot\r\n\r\nCoquelicot is an easy to use server-side upload service written in Go.\r\n\r\nIt is compatible with the [jQuery-File-Upload](https://github.com/blueimp/jQuery-File-Upload)\r\nwidget and supports chunked and resumable file upload. \r\n\r\nUsing Coquelicot, you can add upload functionality to your project\r\nvery easily. Just download and unzip the Coquelicot binary distribution\r\nfor your OS and configure the jQuery-File-Upload widget.\r\n\r\n![logo](http://go-tsunami.com/assets/images/coquelicotLogo.jpg)\r\n\r\n### Server Setup\r\n\r\nYou can use a binary release or get the project if you have a working Go installation.\r\n\r\n#### Binary Release\r\n\r\nGrab the latest [binary release](https://github.com/gotsunami/coquelicot/releases) for you system. Unzip it\r\nand run\r\n\r\n```\r\n$ ./coquelicot -storage /tmp/files -host localhost:9073\r\n```\r\n\r\nto store uploaded files into `/tmp/files` and make the application listen on the loopback interface port 9073\r\n(run `coquelicot.exe` on Windows).\r\n\r\n#### Source Release\r\n\r\nGrab the latest stable version with:\r\n\r\n```\r\n$ go get gopkg.in/gotsunami/coquelicot.v1\r\n```\r\n\r\nSee the [API documentation](http://gopkg.in/gotsunami/coquelicot.v1).\r\n\r\n### jQuery-File-Upload Setup (Client)\r\n\r\nThe `fileupload` object needs the `xhrFields`, `maxChunkSize` and `add` fields to be defined.\r\n\r\n- `xhrFields`: enables sending of cross-domain cookies, which is required to properly handle chunks of data server-side\r\n- `maxChunkSize`: enables uploading chunks of file\r\n- `add`: overwrites the default `add` handler to support resuming file upload\r\n\r\nDownload the [latest release](https://github.com/blueimp/jQuery-File-Upload/releases) of jQuery-File-Upload,\r\nedit the `js/main.js` file in the distribution and make the `fileupload` initialization look like\r\n(replacing the `localhost:9073` part with the name:port of your server running the `coquelicot` program):\r\n\r\n```\r\n$('#fileupload').fileupload({\r\n    // Send cross-domain cookies\r\n    xhrFields: {withCredentials: true},\r\n    url: 'http://localhost:9073/files',\r\n    // Chunk size in bytes\r\n    maxChunkSize: 1000000,\r\n    // Enable file resume\r\n    add: function (e, data) {\r\n        var that = this;\r\n        $.ajax({\r\n            url: 'http://localhost:9073/resume',\r\n            xhrFields: {withCredentials: true},\r\n            data: {file: data.files[0].name}\r\n        }).done(function(result) {\r\n            var file = result.file;\r\n            data.uploadedBytes = file && file.size;\r\n            $.blueimp.fileupload.prototype.options.add.call(that, e, data);\r\n        });\r\n    }\r\n});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}